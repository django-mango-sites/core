version: '3.8'

services:
    web:
        build:
            context: .
            dockerfile: Dockerfile.prod
        env_file: prod.env
        command: bash -c "
            /home/app/wait-for-it.sh db:5432 -t 0 &&
            python manage.py migrate --noinput &&
            python manage.py collectstatic --noinput &&
            gunicorn config.wsgi:application --bind 0.0.0.0:8000
            "
        volumes:
            - .:/home/app
            - static_volume:/home/app/staticfiles/
            - media_volume:/home/app/media/
            - logs_volume:/home/app/logs/
        networks:
            web:
                aliases:
                    - web
        expose:
            - 8000
        depends_on:
            - db

    db:
        image: postgres:13.1-alpine
        hostname: db
        env_file: prod.env
        environment:
            - POSTGRES_DB=${DATABASE_NAME?}
            - POSTGRES_USER=${DATABASE_USERNAME?}
            - POSTGRES_PASSWORD=${DATABASE_PASSWORD?}
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        networks:
            - web
        ports:
            - 5432:5432

    nginx:
        build:
            context: nginx/
            dockerfile: Dockerfile.nginx
        restart: always
        volumes:
            - .:/home/app
            - static_volume:/home/app/staticfiles/
            - media_volume:/home/app/media/
            - conf:/etc/nginx/conf.d
        networks:
            - web
        ports:
            - 80:80
        depends_on:
            - web

    redis:
        image: redis:6.0.9-alpine
        restart: always
        volumes:
            - redis_data:/data
        networks:
            - web
        expose:
            - 6379

networks:
    web:

volumes:
    static_volume:
    media_volume:
    logs_volume:
    postgres_data:
    conf:
    redis_data: